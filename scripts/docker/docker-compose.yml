# Docker Compose configuration for CasGists
version: '3.8'

services:
  casgists:
    build:
      context: ../..
      dockerfile: scripts/docker/Dockerfile
    container_name: casgists
    restart: unless-stopped
    ports:
      - "64001:64001"
    volumes:
      - casgists_data:/data
      - casgists_logs:/app/logs
    environment:
      # Core settings
      - CASGISTS_DB_TYPE=sqlite
      - CASGISTS_DB_PATH=/data/casgists.db
      - CASGISTS_DATA_DIR=/data
      - CASGISTS_LISTEN_PORT=64001
      
      # Generate a secure secret key for production!
      - CASGISTS_SECRET_KEY=${CASGISTS_SECRET_KEY:-}
      
      # Server URL (set this for your domain)
      - CASGISTS_SERVER_URL=${CASGISTS_SERVER_URL:-http://localhost:64001}
      
      # Features
      - CASGISTS_FEATURES_REGISTRATION=${CASGISTS_FEATURES_REGISTRATION:-true}
      - CASGISTS_FEATURES_ORGANIZATIONS=${CASGISTS_FEATURES_ORGANIZATIONS:-true}
      - CASGISTS_FEATURES_SOCIAL=${CASGISTS_FEATURES_SOCIAL:-true}
      
      # Email (optional - configure for notifications)
      - CASGISTS_SMTP_HOST=${CASGISTS_SMTP_HOST:-}
      - CASGISTS_SMTP_USERNAME=${CASGISTS_SMTP_USERNAME:-}
      - CASGISTS_SMTP_PASSWORD=${CASGISTS_SMTP_PASSWORD:-}
      - CASGISTS_SMTP_FROM_EMAIL=${CASGISTS_SMTP_FROM_EMAIL:-}
    
    # Health check
    healthcheck:
      test: ["CMD", "/app/casgists", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    # Resource limits (optional)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Optional: PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: casgists_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=casgists
      - POSTGRES_USER=casgists
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-casgists}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - postgres
    
    # Security
    security_opt:
      - no-new-privileges:true

  # Optional: Redis for search and caching
  redis:
    image: redis:7-alpine
    container_name: casgists_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    profiles:
      - redis
    
    # Security
    security_opt:
      - no-new-privileges:true

  # Optional: Reverse proxy with automatic SSL
  caddy:
    image: caddy:2-alpine
    container_name: casgists_caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    profiles:
      - caddy
    depends_on:
      - casgists
    
    # Security
    security_opt:
      - no-new-privileges:true

volumes:
  casgists_data:
    driver: local
  casgists_logs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  default:
    driver: bridge