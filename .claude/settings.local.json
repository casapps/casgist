{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(go mod:*)",
      "Bash(go build:*)",
      "Bash(./casgists --version)",
      "Bash(./casgists:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(make:*)",
      "Bash(chmod:*)",
      "Bash(go get:*)",
      "Bash(go test:*)",
      "Bash(touch:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(go run:*)",
      "Bash(sed:*)",
      "Bash(mv:*)",
      "Bash(./build/casgists:*)",
      "Bash(timeout:*)",
      "Bash(go list:*)",
      "Bash(./scripts/generate-icons.sh:*)",
      "Bash(./scripts/test-features.sh:*)",
      "Bash(python3:*)",
      "Bash(true)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(./run-server.sh)",
      "Bash(./test-gist.sh:*)",
      "Bash(./test-more-endpoints.sh:*)",
      "Bash(sqlite3:*)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test.db ./build/casgists)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test.db timeout 5s ./build/casgists)",
      "Bash(env CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test.db timeout 5s ./build/casgists)",
      "Bash(env CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test.db ./build/casgists)",
      "Bash(./demo.sh)",
      "Bash(cat:*)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test_backup.db timeout 5s ./build/casgists)",
      "Bash(/dev/null)",
      "Bash(CGO_ENABLED=0 go build -o casgists-test ./cmd/casgists)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test_cli.db ./casgists-test --config-check)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test_migrations.db ./casgists --dry-run)",
      "Bash(CGO_ENABLED=0 go build -o casgists-embed-test ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 go build -o casgists-test ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 go build -o casgists-working ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 go build -o casgists-progress ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 go build -o casgists-final ./cmd/casgists)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=final_test.db ./casgists-final --dry-run)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=comprehensive_test.db ./casgists-final --dry-run)",
      "Bash(env CGO_ENABLED=0 go build -o casgists-embedded ./cmd/casgists)",
      "Bash(go:*)",
      "Bash(docker compose:*)",
      "Bash(CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test.db ./build/casgists --dry-run)",
      "Bash(CASGISTS_CONFIG_PATH=./config.yaml CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=test.db ./build/casgists --dry-run)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists CASGISTS_CONFIG_PATH=/tmp/casgists/config.yaml ./build/casgists)",
      "Bash(docker build:*)",
      "Bash(docker logs:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=/tmp/casgists/test.db ./build/casgists)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists-test CASGISTS_DB_TYPE=sqlite CASGISTS_DB_DSN=/tmp/casgists-test/test.db ./build/casgists --dry-run)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists-test CASGISTS_CONFIG_PATH=/tmp/casgists-test/config-dynamic.yaml ./build/casgists --dry-run)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists-env-test CASGISTS_DATABASE_TYPE=sqlite CASGISTS_DATABASE_DSN=/tmp/casgists-env-test/test.db CASGISTS_SERVER_PORT=64001 ./build/casgists --dry-run)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists-env-test CASGISTS_DATABASE_TYPE=sqlite CASGISTS_DATABASE_DSN=/tmp/casgists-env-test/test.db CASGISTS_SERVER_PORT=64002 ./build/casgists)",
      "Bash(CASGISTS_DATA_DIR=/tmp/casgists-final CASGISTS_DATABASE_TYPE=sqlite CASGISTS_DATABASE_DSN=/tmp/casgists-final/test.db CASGISTS_SERVER_PORT=64003 ./build/casgists)",
      "Bash(docker run:*)",
      "Bash(CASGISTS_SERVER_PORT=64100 ./build/casgists)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(docker exec:*)",
      "Bash(test:*)",
      "Bash(ldd:*)",
      "Bash(CASGISTS_SERVER_PORT=0 ./build/casgists)",
      "Bash(env CASGISTS_SERVER_PORT=0 ./build/casgists)",
      "Bash(docker ps:*)",
      "Bash(docker volume:*)",
      "Bash(CGO_ENABLED=0 go build -o build/casgists ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 go build -o build/casgists ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /tmp/test-linux-amd64 ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o /tmp/test-linux-arm64 ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -o /tmp/test-linux-arm6 ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -o /tmp/test-linux-arm7 ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o /tmp/test-darwin-arm64 ./cmd/casgists)",
      "Bash(env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o /tmp/test-darwin-amd64 ./cmd/casgists)",
      "Bash(env CASGISTS_DATABASE_TYPE=sqlite CASGISTS_DATABASE_DSN=/tmp/claude/test.db CASGISTS_SERVER_PORT=0 timeout 10s ./build/casgists)",
      "Bash(tree:*)",
      "Bash(for file in docs/*.md)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(wc:*)",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(casgists:test)",
      "Bash(docker restart:*)",
      "Bash(/tmp/test_endpoints.sh)",
      "Read(//tmp/**)",
      "Bash(./binaries/casgists --version)",
      "Bash(./binaries/casgists -version)",
      "Bash(docker inspect casapps/casgists:1.0.0)",
      "Bash(./binaries/casgists-linux-amd64 --version)",
      "Bash(CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -trimpath -ldflags \"-s -w -X main.Version=1.0.0\" -o /tmp/test-linux-amd64 ./src/cmd/casgists)",
      "Bash(CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -trimpath -ldflags \"-s -w -X main.Version=1.0.0\" -o /tmp/test-darwin-arm64 ./src/cmd/casgists)",
      "Bash(/tmp/test-linux-amd64 --version)",
      "Bash(echo \"  2. Login to ghcr.io: echo $PAT | docker login ghcr.io -u USERNAME --password-stdin\")",
      "Bash(incus version)",
      "Bash(lxd version)",
      "Bash(incus delete casgists-alpine-test --force)",
      "Bash(incus delete casgists-debian-test --force)",
      "Bash(incus launch images:alpine/edge casgists-alpine-test)",
      "Bash(incus exec casgists-alpine-test -- sh -c \"apk update && apk add go make git docker curl bash\")",
      "Bash(incus launch images:debian/12 casgists-debian-test)",
      "Bash(incus exec casgists-debian-test -- bash -c \"apt-get update && apt-get install -y golang-go make git docker.io curl bash zip\")",
      "Bash(incus list)",
      "Bash(incus launch images:alpine/edge casgists-alpine-test --quiet)",
      "Bash(incus exec casgists-alpine-test -- apk add --no-cache go make git bash curl)",
      "Bash(/tmp/casgists-incus-test.sh)",
      "Bash(tee /tmp/casgists-test-output.log)",
      "Bash(incus exec casgists-alpine-test -- ls -lh /tmp/casgists-alpine)",
      "Bash(incus exec casgists-alpine-test -- /tmp/casgists-alpine --version)",
      "Bash(incus launch images:debian/12 casgists-debian-test --quiet)",
      "Bash(incus exec casgists-debian-test -- bash -c \"export DEBIAN_FRONTEND=noninteractive && apt-get update -qq && apt-get install -y -qq golang-go make git bash curl file\")",
      "Bash(incus launch images:debian/12/cloud casgists-deb-quick)",
      "Bash(incus exec casgists-deb-quick -- bash -c \"apt-get update -qq && apt-get install -y -qq golang-go make git file\")",
      "Bash(incus file push go.mod go.sum Makefile release.txt casgists-deb-quick/root/)",
      "Bash(incus file push -r src/ casgists-deb-quick/root/src/)",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && go mod download && CGO_ENABLED=0 go build -trimpath -ldflags ''-s -w -X main.Version=1.0.0'' -o /tmp/casgists-debian ./src/cmd/casgists\")",
      "Bash(incus exec casgists-deb-quick -- go version)",
      "Bash(incus exec casgists-deb-quick -- bash -c \"curl -LO https://go.dev/dl/go1.23.4.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.23.4.linux-amd64.tar.gz && ln -sf /usr/local/go/bin/go /usr/bin/go-new\")",
      "Bash(incus exec casgists-deb-quick -- /usr/local/go/bin/go version)",
      "Bash(incus exec casgists-deb-quick -- bash -c \"apt-get install -y -qq curl wget\")",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /tmp && wget -q https://go.dev/dl/go1.23.4.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.23.4.linux-amd64.tar.gz\")",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && /usr/local/go/bin/go mod download && CGO_ENABLED=0 /usr/local/go/bin/go build -trimpath -ldflags ''''-s -w -X main.Version=1.0.0'''' -o /tmp/casgists-debian ./src/cmd/casgists\")",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && /usr/local/go/bin/go mod download\")",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && CGO_ENABLED=0 /usr/local/go/bin/go build -trimpath -ldflags ''-s -w -X main.Version=1.0.0'' -o /tmp/casgists-debian ./src/cmd/casgists\")",
      "Bash(incus exec casgists-deb-quick -- ls -la /root/)",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && mv src/src . && rm -rf src/src && ls -la\")",
      "Bash(incus exec casgists-deb-quick -- ls -la /root/src/)",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && mv src/src/* src/ && rmdir src/src && ls src/\")",
      "Bash(incus exec casgists-deb-quick -- bash -c \"cd /root && /usr/local/go/bin/go build -trimpath -ldflags ''-s -w -X main.Version=1.0.0'' -o /tmp/casgists-debian ./src/cmd/casgists\")",
      "Bash(incus exec casgists-deb-quick -- ls -lh /tmp/casgists-debian)"
    ],
    "deny": []
  }
}
